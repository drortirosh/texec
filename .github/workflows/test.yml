name: test matrix


on:
  push:
    branches: '**'


jobs:

  makematrix:
    outputs:
      matrix: ${{steps.setmatrix.outputs.matrix}}
    runs-on: ubuntu-latest  
    steps:
      - id: setmatrix
        name: set outputs.matrix
        run: echo matrix='[{"name":"big", "val":"11"}, {"name":"small"}]' >> $GITHUB_OUTPUT
      - name: value=${{steps.setmatrix.outputs.matrix}}
        run: echo '${{steps.setmatrix.outputs.matrix}}' | jq

  tmatrix:
    name: someName
    # needs: makematrix
    strategy:
      matrix:
        include: #${{ fromJson(needs.makematrix.outputs.matrix)}}
          - { name: big, value: 333 }
          - { name: small, value: 1234 }
    runs-on: ubuntu-latest
    steps:
      - name: step-${{ matrix.name }}-${{matrix.val}}
        id: tbuild
        run: |
          dump=`echo '${{toJson(matrix)}}' | jq -c`
          echo "output={\"name\":\"${{matrix.name}}\",\"obj\":$dump}" | tee -a $GITHUB_OUTPUT
      ## Write for matrix outputs workaround 
      - uses: cloudposse/github-action-matrix-outputs-write@v1
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.name }}
          outputs: |-
            out: xx-${{ steps.tbuild.outputs.output }}

  ## Read matrix outputs 
  read:
    runs-on: ubuntu-latest
    needs: [tmatrix]
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: tmatrix

      - run: echo read-res=${{steps.read.outputs.result}}

    outputs:
      result: "${{ steps.read.outputs.result }}"

  summary:
    needs: read
    if: ${{always()}}
    runs-on: ubuntu-latest
    steps:
      - name: dump
        run: echo 'summary=${{needs.read.outputs.result}}'
