name: Run Bundlers Spec-Tests

# Allow one concurrent
concurrency:
  group: "uniq"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug'
        required: false
        type: boolean
      ymlFilter:
        description: 'Filter bundler yml files'
        type: string
        required: false

      pytest-args:
        description: 'Extra pytest args'
        type: string
        default: -k gasp
        required: false

  push:
    branches: '**'

  pull_request:
    types: [opened, reopened, synchronize]

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

jobs:

  create-bundlers-list:
    runs-on: ubuntu-latest
    outputs:
      bundlers:  ${{ steps.stepMatrixBundlers.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - id: stepMatrixBundlers
        run: |
          bundlers=`ls bundlers/*/*.yml | grep ${{inputs.ymlFilter}}.`
          # make a json array: [ {"bundler":"aabundler", "path:"./bundlers/aabundler/aabundler.yml"} ]
          echo "matrix=`echo $bundlers|perl -pe 's/(.*?\/(.*?)\/.*)/{^bundler^:^$1^,^path^:^$2^}/'|tr ^ \"|jq -sc`" | tee -a "$GITHUB_OUTPUT"

  bundler-tests:
    needs: create-bundlers-list
    strategy:
      matrix: ${{ fromJson(needs.create-bundlers-list.outputs.matrix) }}

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false

      - id: runtest
        name: testing ${{ matrix.bundler }}
        run: |
          pytestArgs=${{inputs.pytest-args}}
          echo pytest-args=${pytestArgs:=-k gasp}
          OUTFOLDER=./build ./runbundler/runbundler.sh ${{ matrix.path }} test $pytestArgs
          find *
          echo -n "results=" >> "$GITHUB_OUTPUT"
          jq -c . ./build/*.json >> "$GITHUB_OUTPUT"
          echo -n "summary=" >> "$GITHUB_OUTPUT"
          cat ./build/*.json | jq '.testsuites.testsuite | { "@name", "@tests", "@errors", "@failures", "@skipped", "@time" }' -c >> "$GITHUB_OUTPUT"

      - uses: cloudposse/github-action-matrix-outputs-write@v1
        id: matrix-output
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: bundler
          outputs: |-
            ${{matrix.bundler}}: ${{ steps.runtest.outputs.results }}

      - name: Push build output to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: runtest-${{matrix.bundler}}
          path: ./build/

  summary:
    runs-on: ubuntu-latest
    needs: [bundler-tests]
    if: ${{always()}}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: bundler-tests
          matrix-key: ${{ matrix.bundler }}
      - run: echo "all outputs=${{steps.read.outputs.result}}"
      - run: echo '${{toJson(steps.read.outputs)}}' | jq
    # outputs:
    #     result: "${{ toJSON(steps.read.outputs) }}"

