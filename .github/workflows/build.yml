name: Test Exec

on: 
  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug'
        required: false
        type: boolean

  push:
    branches: '**'

  pull_request:
    types: [opened, reopened, synchronize]

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

jobs:

  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - run: echo version=`ls dir/|perl -pe 's/(.*)/"$1"/'|jq -sc` > $GITHUB_OUTPUT

  texec:
    needs: build-matrix
    strategy:
      matrix: ${{ needs.build-matrix.outputs.version}}

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false
          # repository: ...
          # path: ...

      - id: exec
        run: echo 'out=${{matrix.version}}' | tee ${{matrix.version}}.out.txt >> $GITHUB_OUTPUT

      - uses: cloudposse/github-action-matrix-outputs-write@v1
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.version }}
          outputs: |-
            name: ${{ steps.exec.outputs.out }}
            ## Multiline string
            # tags: ${{ toJson(steps.build.outputs) }}

      - name: Push build output to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.version}}
          path: ${{matrix.version}}.out.txt

  summary:
    runs-on: ubuntu-latest
    needs: [texec]

    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: texec
          matrix-key: ${{ matrix.version }}
      - run: |
          cat <<EOF  
          steps.read = ${{ toJSON(steps.read)}} 
          EOF
    outputs:
        result: "${{ toJSON(steps.read.outputs) }}"


# Allow one concurrent 
concurrency:
  group: "mygroup"
  cancel-in-progress: true
