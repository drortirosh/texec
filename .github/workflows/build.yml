name: Test Exec

# Allow one concurrent
concurrency:
  group: "uniq"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug'
        required: false
        type: boolean
      ymlFilter:
        description: 'Filter bundler yml files'
        type: string
        required: false

      pytest-args:
        description: 'Extra pytest args'
        type: string
        required: false

  push:
    branches: '**'

  pull_request:
    types: [opened, reopened, synchronize]

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

jobs:

  create-bundlers-list:
    runs-on: ubuntu-latest
    outputs:
      bundlers:  ${{ steps.stepMatrixBundlers.outputs.bundlers }}
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - run: |
        bundlers=`ls bundlers/*/*.yml | grep ${{inputs.ymlFilter:-.}}`
        #make a json array
        echo "bundlers=`echo $bundlers|perl -pe 's/(.*)/\"$1\"/'|jq -sc`" | tee -a "$GITHUB_OUTPUT"
        id: stepMatrixBundlers

  bundler-tests:
    needs: create-bundlers-list
    strategy:
      matrix:
        bundler: ${{ fromJson(needs.create-bundlers-list.outputs.bundlers) }}

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false

      - id: runtest
        name: testing ${{ matrix.bundler }}
        run: |
          OUTFOLDER=./build ./runbundler/runbundler.sh test ${{ matrix.bundler }} ${{ inputs.pytest-args }}
          echo "results="`jq -c . ./build/out/*.json" >> "$GITHUB_OUTPUT"

      - uses: cloudposse/github-action-matrix-outputs-write@v1
        id: matrix-output
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.bundler }}
          outputs: |-
            name: ${{ steps.runtest.outputs.results }}

      - name: Push build output to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: runtest-${{matrix.bundler}}
          path: ./build/

  summary:
    runs-on: ubuntu-latest
    needs: [bundler-tests]

    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: bundler-tests
          matrix-key: ${{ matrix.bundler }}
      - run: echo "all outputs=${{steps.read.outputs.result}}"
      - run: echo '${{steps.read.outputs.result}}' | jq
    # outputs:
    #     result: "${{ toJSON(steps.read.outputs) }}"

